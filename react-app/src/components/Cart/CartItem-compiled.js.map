{"version":3,"sources":["CartItem.js"],"names":[],"mappings":"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","file":"CartItem-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport '../../theme/css/bootstrap-datepicker3.min.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {\n  addProductToCart,\n  showProductsInCart\n} from '../../api';\n// import * as modelActions from './actions';\n\nclass CartItem extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderNumberInp: props.count,\n      errorBorderRed: false,\n      inputPlaceHolder: ''\n    }\n  }\n\n  addProductToCart(productCounts) {\n    if (productCounts) {\n      const { dispatch } = this.props;\n      const data = {\n        barCode: this.props.barCode,\n        productId: this.props.productId,\n        productCounts: productCounts,\n      };\n      addProductToCart(dispatch, data);\n      showProductsInCart(dispatch);\n      console.log(\"datadata\", data);\n      console.log(\"datadata\", productCounts)\n    } else {\n      this.setState({\n        errorBorderRed: true,\n        inputPlaceHolder: '?'\n      });\n    }\n  }\n\n  setPlusNumber() {\n    var inputVal = this.state.orderNumberInp;\n    if (inputVal < 99) {\n      this.setState({\n        orderNumberInp: (parseInt(inputVal) + 1)\n      });\n      this.addProductToCart(parseInt(inputVal) + 1)\n    } else if (isNaN(inputVal)) {\n      this.setState({\n        orderNumberInp: 1,\n        errorBorderRed: false\n      });\n    }\n  }\n\n  setMinusNumber() {\n    var inputVal = parseInt(this.state.orderNumberInp);\n    if (inputVal > 1) {\n      this.setState({\n        orderNumberInp: (parseInt(inputVal) - 1)\n      });\n      this.addProductToCart(parseInt(inputVal) - 1)\n    } else if (isNaN(inputVal)) {\n      this.setState({\n        orderNumberInp: 1,\n        errorBorderRed: false\n      });\n    }\n  }\n\n  render() {\n    const orderNumberInp = classNames({\n      'order-number-inp': true,\n      'error-border-red': this.state.errorBorderRed\n    });\n    var inputVal = this.state.orderNumberInp;\n    var inputPlaceHolder = this.state.inputPlaceHolder;\n    var cost = this.props.price * inputVal;\n\n    return (\n      <tr>\n        <td className=\"table-40-procent-td\">\n          <img className=\"cart-product-image\" src={this.props.imagePath} />\n          <span>{this.props.name}</span>\n        </td>\n        <td>{this.props.price} ₽ / {this.props.unit}</td>\n        <td style={{textAlign: 'start'}}>\n          <div className=\"order-table__cell\">\n            <div className=\"b-number\">\n              <div className=\"order-number\">\n                <div className=\"order-number__field\">\n                  <input\n                    className={orderNumberInp}\n                    type=\"number\"\n                    max=\"99\"\n                    min=\"0\"\n                    value={inputVal}\n                    placeholder={inputPlaceHolder}\n                  />\n                </div>\n                <div\n                  className=\"order-number__spin minus\"\n                  onClick={this.setMinusNumber.bind(this)}\n                ></div>\n                <div\n                  className=\"order-number__spin plus\"\n                  onClick={this.setPlusNumber.bind(this)}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td>{cost} ₽</td>\n        <td style={{color: 'firebrick'}}>\n          <span className=\"remove-product glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n  products: store.products,\n}))(CartItem);"]}