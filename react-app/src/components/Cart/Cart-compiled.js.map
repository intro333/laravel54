{"version":3,"sources":["Cart.js"],"names":[],"mappings":"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","file":"Cart-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../../theme/css/index.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport MenuMobile from '../Popups/MenuMobile';\nimport CartItem from '../Cart/CartItem';\nimport {\n  showProductsInCart,\n  sendOrder,\n} from '../../api';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: ''\n    };\n\n  }\n\n  componentWillMount() {\n    const { dispatch } = this.props;\n    showProductsInCart(dispatch);\n  }\n\n  handleChangeComment(event) {\n    this.setState({comment: event.target.value});\n  }\n\n  handlerSendOrder() {\n    const { dispatch } = this.props;\n    const data = {\n      comment: this.state.comment\n    };\n    sendOrder(dispatch, data);\n    this.props.history.push('/');//TODO сделать редирект на страницу успешного завершения отправления заказа\n  }\n\n  render() {\n    const { api } = this.props;\n    const productsForCart = api.get('productsForCart');\n    var total = null;\n\n    const productsTd = productsForCart.map((item) =>\n      <CartItem\n        key={item.productId}\n        item={item}\n\n      />\n    );\n\n    total = productsForCart.reduce((total, item) => {\n        return total + ((item.count === '' ? 1 : parseInt(item.count, 10)) * parseInt(item.price, 10));\n      }, 0\n    );\n\n    return (\n      <div className=\"container\">\n        <Navigation />\n        <MenuMobile />\n        <div className=\"main-container\">\n          <div className=\"flex-box-between\">\n            <h3>Корзина</h3>\n            <div onClick={this.handlerSendOrder.bind(this)} className=\"cart-button\">Отправить заказ</div>\n          </div>\n\n          <table id=\"cart-products-table\">\n            <tr>\n              <th className=\"table-30-procent\">Продукт</th>\n              <th className=\"table-25-procent\">Цена</th>\n              <th className=\"table-25-procent\">Количество</th>\n              <th className=\"table-10-procent\">Стоимость</th>\n              <th className=\"table-10-procent\"></th>\n            </tr>\n            { productsTd }\n          </table>\n          <div className=\"cart-order__total\">Итог:&nbsp;<span>{ total } ₽</span></div>\n          <textarea\n            name=\"comment\"\n            className=\"cart-comment\"\n            value={this.state.comment}\n            onChange={this.handleChangeComment.bind(this)}\n            placeholder=\"Оставьте комментарий к заказу...\"\n          />\n          <div onClick={this.handlerSendOrder.bind(this)} className=\"cart-button\">Отправить заказ</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n}))(Cart);\n\n// productId={item.productId}\n// count={item.count}\n// imagePath={item.imagePath}\n// name={item.name}\n// barCode={item.barCode}\n// price={item.price}\n// unit={item.unit}"]}