{"version":3,"sources":["Cart.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAY,Y;;AACZ;;;;;;;;;;;;IAOM,I;;;AACJ,gBAAY,KAAZ,EAAmB;AAAA;;AAAA,4GACX,KADW;;AAEjB,UAAK,KAAL,GAAa;AACX,eAAS,EADE;AAEX,kBAAY,CAFD;AAGX,kBAAY;AAHD,KAAb;;AAFiB;AAQlB;;;;yCAEoB;AAAA,UACX,QADW,GACE,KAAK,KADP,CACX,QADW;;AAEnB,mCAAmB,QAAnB;AACA,sCAAsB,QAAtB;AACD;;;wCAEmB,K,EAAO;AACzB,WAAK,QAAL,CAAc,EAAC,SAAS,MAAM,MAAN,CAAa,KAAvB,EAAd;AACD;;;uCAEkB;AAAA,mBAC0B,KAAK,KAD/B;AAAA,UACT,QADS,UACT,QADS;AAAA,UACC,OADD,UACC,OADD;AAAA,UACU,WADV,UACU,WADV;;AAEjB,UAAM,OAAO;AACX,iBAAS,KAAK,KAAL,CAAW,OADT;AAEX,oBAAY,KAAK,KAAL,CAAW;AAFZ,OAAb;AAIA,UAAI,KAAK,KAAL,CAAW,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,4BAAU,QAAV,EAAoB,IAApB,EAA0B,OAA1B;AACD,OAFD,MAEO,IAAI,YAAY,WAAZ,IAA2B,YAAY,WAAZ,CAAwB,MAAxB,KAAmC,CAAlE,EAAqE;AAC1E,4BAAU,QAAV,EAAoB,IAApB,EAA0B,OAA1B;AACD,OAFM,MAEA;AACL,aAAK,QAAL,CAAc;AACZ,sBAAY;AADA,SAAd;AAGD;AACF;;;0CAEqB,C,EAAG;AAAA,UACf,QADe,GACF,KAAK,KADH,CACf,QADe;;AAEvB,eAAS,aAAa,SAAb,CAAuB,EAAvB,CAAT;AACA,WAAK,QAAL,CAAc;AACZ,oBAAY;AADA,OAAd;AAGA,WAAK,QAAL,CAAc,EAAC,YAAY,EAAE,KAAf,EAAd;AACD;;;6BAEQ;AAAA,oBAC0C,KAAK,KAD/C;AAAA,UACC,OADD,WACC,OADD;AAAA,UACU,WADV,WACU,WADV;AAAA,UACsB,eADtB,WACsB,eADtB;AAEP;AACA;;AACA,UAAI,QAAQ,IAAZ;AACA,UAAI,yBAAyB,QAAQ,GAAR,CAAY,QAAZ,EAAsB,SAAnD;;AAEA,cAAQ,GAAR,CAAY,wBAAZ,EAAsC,sBAAtC;AACA,UAAM,aAAa,gBAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,eACrC;AACE,eAAK,KAAK,SADZ;AAEE,gBAAM;AAFR,UADqC;AAAA,OAApB,CAAnB;;AAOA,cAAQ,gBAAgB,MAAhB,CAAuB,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC5C,eAAO,QAAS,CAAC,KAAK,KAAL,KAAe,EAAf,GAAoB,CAApB,GAAwB,SAAS,KAAK,KAAd,EAAqB,EAArB,CAAzB,IAAqD,SAAS,KAAK,KAAd,EAAqB,EAArB,CAArE;AACD,OAFK,EAEH,CAFG,CAAR;;AAKA,UAAI,mBAAmB,CAAC,EAAC,OAAO,CAAR,EAAW,OAAO,EAAlB,EAAD,CAAvB;AACA,UAAI,WAAW,IAAf;AACA,kBAAY,WAAZ,IAA2B,YAAY,WAAZ,CAAwB,MAAxB,KAAmC,CAA9D,IAAmE,YAAY,WAAZ,CAAwB,OAAxB,CAAgC;AAAA,eAAK,EAAE,eAAF,KAAsB,CAAtB,IACtG,iBAAiB,IAAjB,CAAsB,EAAC,OAAO,EAAE,eAAV,EAA2B,OAAO,EAAE,UAApC,EAAtB,CADiG;AAAA,OAAhC,CAAnE;;AAGA,UAAM,aAAa;AACjB,eAAO,MADU;AAEjB,iBAAS,MAFQ;AAGjB,oBAAY;AAHK,OAAnB;;AAMA,UAAI,iBAAiB;AAAA;AAAA,UAAK,OAAO,UAAZ;AACnB;AAAA;AAAA,YAAO,WAAU,mBAAjB,EAAqC,SAAQ,YAA7C;AAAA;AAAA,SADmB;AAEnB;AAAA;AAAA,YAAK,OAAO,EAAC,OAAO,OAAR,EAAiB,YAAY,MAA7B,EAAZ;AACE;AACE,kBAAK,YADP;AAEE,mBAAO,KAAK,KAAL,CAAW,UAFpB;AAGE,qBAAS,gBAHX;AAIE,sBAAU,KAAK,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC,CAJZ;AAKE,yBAAY,EALd;AAME,uBAAW,KANb;AAOE,wBAAY;AAPd;AADF;AAFmB,OAArB;;AAeA,UAAI,gBAAgB;AAAA;AAAA,UAAO,WAAU,mBAAjB,EAAqC,SAAQ,YAA7C,EAA0D,OAAO,EAAC,cAAc,MAAf,EAAjE;AAAA;AAAA,OAApB;AAGA,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE,iEADF;AAEE,iEAFF;AAGE;AAAA;AAAA,YAAK,WAAU,gBAAf;AACE;AAAA;AAAA,cAAK,WAAU,kBAAf;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAA;AAAA,gBAAK,SAAS,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAAd,EAAgD,WAAU,aAA1D;AAAA;AAAA;AAFF,WADF;AAME;AAAA;AAAA,cAAO,WAAU,qBAAjB;AACE;AAAA;AAAA,gBAAI,WAAU,cAAd;AACE;AAAA;AAAA,kBAAI,WAAU,kBAAd;AAAA;AAAA,eADF;AAEE;AAAA;AAAA,kBAAI,WAAU,kBAAd;AAAA;AAAA,eAFF;AAGE;AAAA;AAAA,kBAAI,WAAU,kBAAd;AAAA;AAAA,eAHF;AAIE;AAAA;AAAA,kBAAI,WAAU,kBAAd;AAAA;AAAA,eAJF;AAKE,oDAAI,WAAU,kBAAd;AALF,aADF;AAQI;AARJ,WANF;AAgBE;AAAA;AAAA,cAAK,WAAU,mBAAf;AAAA;AAA8C;AAAA;AAAA;AAAQ,mBAAR;AAAA;AAAA;AAA9C,WAhBF;AAiBE;AACE,kBAAK,SADP;AAEE,uBAAU,cAFZ;AAGE,mBAAO,KAAK,KAAL,CAAW,OAHpB;AAIE,sBAAU,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B,CAJZ;AAKE,yBAAY;AALd,YAjBF;AAwBE;AAAA;AAAA,cAAO,WAAU,mBAAjB;AAAA;AAAoD,wBAAY,QAAZ,GAAuB,YAAY,QAAZ,CAAqB,aAA5C,GAA4D;AAAhH,WAxBF;AAyBG,sBAAY,WAAZ,IAA2B,YAAY,WAAZ,CAAwB,MAAxB,KAAmC,CAA9D,GAAkE,cAAlE,GAAmF,aAzBtF;AA0BE;AAAA;AAAA,cAAO,WAAU,mBAAjB,EAAqC,OAAO,EAAC,OAAO,KAAR,EAAe,UAAU,MAAzB,EAAiC,WAAW,KAA5C,EAA5C;AAEI,iBAAK,KAAL,CAAW,UAAX,KAA0B,EAA1B,GAA+B,KAAK,KAAL,CAAW,UAA1C,GAAwD,YAAY,WAAZ,IAA2B,YAAY,WAAZ,CAAwB,MAAxB,KAAmC,CAA9D,GAAkE,sBAAlE,GAA2F;AAFvJ,WA1BF;AA+BE;AAAA;AAAA,cAAK,SAAS,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAAd,EAAgD,WAAU,aAA1D;AAAA;AAAA;AA/BF;AAHF,OADF;AAuCD;;;;;;kBAGY,yBAAQ;AAAA,SAAU;AAC/B,cAAU,MAAM,QADe;AAE/B,aAAS,MAAM,OAFgB;AAG/B,SAAK,MAAM,GAHoB;AAI/B,iBAAa,MAAM,GAAN,CAAU,GAAV,CAAc,aAAd,CAJkB;AAK/B,qBAAiB,MAAM,GAAN,CAAU,GAAV,CAAc,iBAAd;AALc,GAAV;AAAA,CAAR,EAMX,IANW,C","file":"Cart-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Select from 'react-select';\nimport '../../theme/css/index.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport MenuMobile from '../Popups/MenuMobile';\nimport CartItem from '../Cart/CartItem';\nimport * as modelActions from '../../actions';\nimport {\n  showProductsInCart,\n  showOrdersQuotaInCart,\n  sendOrder,\n  checkTimeQuota,\n} from '../../api';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: '',\n      time_quota: 0,\n      cart_error: '',\n    };\n\n  }\n\n  componentWillMount() {\n    const { dispatch } = this.props;\n    showProductsInCart(dispatch);\n    showOrdersQuotaInCart(dispatch);\n  }\n\n  handleChangeComment(event) {\n    this.setState({comment: event.target.value});\n  }\n\n  handlerSendOrder() {\n    const { dispatch, history, ordersQuota } = this.props;\n    const data = {\n      comment: this.state.comment,\n      time_quota: this.state.time_quota\n    };\n    if (this.state.time_quota !== 0) {\n      sendOrder(dispatch, data, history);\n    } else if (ordersQuota.ordersQuota && ordersQuota.ordersQuota.length === 0) {\n      sendOrder(dispatch, data, history)\n    } else {\n      this.setState({\n        cart_error: 'Выберите удобный период получения заказа.'\n      });\n    }\n  }\n\n  handleChangeTimeQuota(e) {\n    const { dispatch } = this.props;\n    dispatch(modelActions.setErrors(''));\n    this.setState({\n      cart_error: ''\n    });\n    this.setState({time_quota: e.value});\n  }\n\n  render() {\n    const { session, ordersQuota,productsForCart } = this.props;\n    // checkTimeQuota(dispatch, {time_quota: this.state.time_quota}); //TODO чекаем кол-во квот\n    // const check = api.get('checkTimeQuota');                       //TODO чекаем кол-во квот\n    var total = null;\n    var errorMessageCountQuota = session.get('errors').errorTime;\n\n    console.log('errorMessageCountQuota', errorMessageCountQuota)\n    const productsTd = productsForCart.map((item) =>\n      <CartItem\n        key={item.productId}\n        item={item}\n      />\n    );\n\n    total = productsForCart.reduce((total, item) => {\n        return total + ((item.count === '' ? 1 : parseInt(item.count, 10)) * parseInt(item.price, 10));\n      }, 0\n    );\n\n    var timeQuotaOptions = [{value: 0, label: ''}];\n    var delivery = null;\n    ordersQuota.ordersQuota && ordersQuota.ordersQuota.length !== 0 && ordersQuota.ordersQuota.forEach(q => q.orders_quota_id !== 1 &&\n      timeQuotaOptions.push({value: q.orders_quota_id, label: q.time_quota}));\n\n    const quotaStyle = {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    }\n\n    var ordersQoutaDiv = <div style={quotaStyle}>\n      <label className=\"order-filds-label\" htmlFor=\"time_quota\">Я смогу забрать свой заказ в период с</label>\n      <div style={{width: '120px', marginLeft: '10px'}}>\n        <Select\n          name=\"time_quota\"\n          value={this.state.time_quota}\n          options={timeQuotaOptions}\n          onChange={this.handleChangeTimeQuota.bind(this)}\n          placeholder=''\n          clearable={false}\n          searchable={false}\n        />\n      </div>\n    </div>;\n\n    var OrderNonQuota = <label className=\"order-filds-label\" htmlFor=\"time_quota\" style={{marginBottom: '15px'}}>\n      Заказ можно получить в любое удобное время в указанный день доставки.Периоды получения заказа закончились.\n    </label>;\n    return (\n      <div className=\"container\">\n        <Navigation />\n        <MenuMobile />\n        <div className=\"main-container\">\n          <div className=\"flex-box-between\">\n            <h3>Корзина</h3>\n            <div onClick={this.handlerSendOrder.bind(this)} className=\"cart-button\">Отправить заказ</div>\n          </div>\n\n          <table className=\"cart-products-table\">\n            <tr className=\"cart-tr-head\">\n              <th className=\"table-30-procent\">Продукт</th>\n              <th className=\"table-25-procent\">Цена</th>\n              <th className=\"table-25-procent\">Количество</th>\n              <th className=\"table-10-procent\">Стоимость</th>\n              <th className=\"table-10-procent\"></th>\n            </tr>\n            { productsTd }\n          </table>\n          <div className=\"cart-order__total\">Итог:&nbsp;<span>{ total } ₽</span></div>\n          <textarea\n            name=\"comment\"\n            className=\"cart-comment\"\n            value={this.state.comment}\n            onChange={this.handleChangeComment.bind(this)}\n            placeholder=\"Оставьте комментарий к заказу...\"\n          />\n          <label className=\"order-filds-label\">Дата доставки {ordersQuota.delivery ? ordersQuota.delivery.delivery_date : ''}</label>\n          {ordersQuota.ordersQuota && ordersQuota.ordersQuota.length !== 0 ? ordersQoutaDiv : OrderNonQuota}\n          <label className=\"order-filds-label\" style={{color: 'red', fontSize: '12px', marginTop: '5px'}}>\n            {\n              this.state.cart_error !== '' ? this.state.cart_error : (ordersQuota.ordersQuota && ordersQuota.ordersQuota.length !== 0 ? errorMessageCountQuota : '')\n            }\n            </label>\n          <div onClick={this.handlerSendOrder.bind(this)} className=\"cart-button\">Отправить заказ</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n  ordersQuota: store.api.get('ordersQuota'),\n  productsForCart: store.api.get('productsForCart'),\n}))(Cart);"]}