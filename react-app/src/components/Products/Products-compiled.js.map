{"version":3,"sources":["Products.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAGA;;;;;;;;;;IAEM,Q;;;AACJ,oBAAY,KAAZ,EAAmB;AAAA;;AAAA,+GACX,KADW;AAElB;;;;yCAEoB;AAAA,mBACW,KAAK,KADhB;AAAA,UACX,QADW,UACX,QADW;AAAA,UACD,OADC,UACD,OADC;;AAEnB,4BAAY,QAAZ,EAAsB,QAAQ,GAAR,CAAY,YAAZ,CAAtB;AACD;;;6BAEQ;AAAA,oBACkB,KAAK,KADvB;AAAA,UACC,GADD,WACC,GADD;AAAA,UACM,OADN,WACM,OADN;;AAEP,UAAM,WAAW,IAAI,GAAJ,CAAQ,UAAR,CAAjB;;AAEA,UAAM,cAAc,yBAAW,QAAX,KAAwB,SAAS,GAAT,CAAa,UAAC,IAAD;AAAA,eACvD;AACE,eAAK,KAAK,UADZ;AAEE,qBAAW,KAAK,UAFlB;AAGE,wBAAc,IAHhB;AAIE,mBAAS,KAAK,QAJhB;AAKE,kBAAS,KAAK,UALhB;AAME,oBAAW,KAAK,IANlB;AAOE,iBAAQ,KAAK,KAPf;AAQE,gBAAO,KAAK;AARd,UADuD;AAAA,OAAb,CAA5C;;AAaA,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE,4DADF;AAEE,iEAFF;AAGE,iEAHF;AAIE;AAAA;AAAA,YAAK,WAAU,gBAAf;AACE;AAAA;AAAA,cAAK,WAAU,eAAf;AACE;AAAA;AAAA,gBAAM,IAAG,aAAT;AAAuB;AAAA;AAAA,kBAAI,WAAU,mBAAd;AAAA;AAAA;AAAvB,aADF;AAEE,mDAAK,WAAU,qBAAf,GAFF;AAGE;AAAA;AAAA,gBAAI,WAAU,sBAAd;AAAuC,sBAAQ,GAAR,CAAY,cAAZ;AAAvC;AAHF,WADF;AAME;AAAA;AAAA,cAAK,WAAU,cAAf;AACI;AADJ;AANF;AAJF,OADF;AAiBD;;;;;;kBAGY,yBAAQ;AAAA,SAAU;AAC/B,cAAU,MAAM,QADe;AAE/B,aAAS,MAAM,OAFgB;AAG/B,SAAK,MAAM;AAHoB,GAAV;AAAA,CAAR,EAIX,QAJW,C","file":"Products-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../../theme/css/index.css';\nimport '../../theme/css/adaptive.css';\nimport '../../theme/css/main.css';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport MenuMobile from '../Popups/MenuMobile';\nimport ProductItem from './ProductItem';\nimport Modal  from '../Popups/Modal';\nimport {\n  setProducts,\n} from '../../api';\nimport {isEmptyMap} from '../../helpers';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    const { dispatch, session } = this.props;\n    setProducts(dispatch, session.get('categoryId'));\n  }\n\n  render() {\n    const { api, session } = this.props;\n    const products = api.get('products');\n\n    const productItem = isEmptyMap(products) && products.map((item) =>\n      <ProductItem\n        key={item.product_id}\n        productId={item.product_id}\n        productItems={item}\n        barCode={item.bar_code}\n        imgSrc={ item.image_path }\n        itemName={ item.name }\n        price={ item.price }\n        unit={ item.unit }\n      />\n    );\n\n    return (\n      <div className=\"container\">\n        <Modal />\n        <Navigation />\n        <MenuMobile />\n        <div className=\"main-container\">\n          <div className=\"category-head\">\n            <Link to=\"/categories\"><h3 className=\"bread-crumbs-link\">Продукты</h3></Link>\n            <div className=\"bread-crumbs-circle\"></div>\n            <h3 className=\"bread-crumbs-on-page\">{ session.get('categoryName') }</h3>\n          </div>\n          <div className=\"category-all\">\n            { productItem }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n}))(Products);"]}