{"version":3,"sources":["Products.js"],"names":[],"mappings":"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","file":"Products-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../../theme/css/index.css';\nimport '../../theme/css/adaptive.css';\nimport '../../theme/css/main.css';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport MenuMobile from '../Popups/MenuMobile';\nimport ProductItem from './ProductItem';\nimport SuccessModal  from '../Popups/SuccessModal';\nimport { changeSuccessModalDisplay } from './actions';\nimport * as mainActions from '../../actions';\nimport { Map } from 'immutable';\nimport Footer from '../Navigation/Footer';\n\nimport {\n  setProducts,\n  showOrdersQuotaInCart,\n} from '../../api';\nimport {isEmptyMap} from '../../helpers';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    const { dispatch, session } = this.props;\n    dispatch(mainActions.setLoaderStatus(true));\n    setProducts(dispatch, session.get('categoryId'));\n    showOrdersQuotaInCart(dispatch);\n  }\n\n  componentWillUnmount() {\n    const map = Map;\n    const { dispatch } = this.props;\n    dispatch(mainActions.setProducts(map()));\n  }\n\n  handlerCloseModal() {\n    const { dispatch } = this.props;\n    dispatch(changeSuccessModalDisplay(false));\n  }\n\n  render() {\n    const { api, session, products, history, ordersQuota } = this.props;\n    const productsApi = api.get('products');\n\n    const productItem = isEmptyMap(productsApi) && productsApi.map((item) =>\n      <ProductItem\n        key={item.product_id}\n        productId={item.product_id}\n        productItems={item}\n        barCode={item.bar_code}\n        imgSrc={ item.image_path }\n        itemName={ item.name }\n        price={ item.price }\n        unit={ item.unit }\n        ordersQuota={ordersQuota.delivery ? ordersQuota.delivery : ''}\n      />\n    );\n    const deliveryStatus = ordersQuota.delivery && ordersQuota.delivery.status && ordersQuota.delivery.status;\n    const deliveryMessage = <p className=\"order-filds-label scroll-to-error\"\n                              style={{color: 'red', fontSize: '14px', marginTop: '5px'}}>Дата доставки закрыта.Подробности здесь.</p>;\n\n    return (\n      <div>\n        <div className=\"container\">\n          <Navigation />\n          <MenuMobile />\n          <div className=\"main-container\">\n            <SuccessModal\n              handlerCloseModal={this.handlerCloseModal.bind(this)}\n              successModalDisplay={products.get('successModalDisplay')}\n              history={history}\n            />\n            <div className=\"category-head\">\n              <Link to=\"/categories\"><h3 className=\"bread-crumbs-link\">Продукты</h3></Link>\n              <div className=\"bread-crumbs-circle\"></div>\n              <h3 className=\"bread-crumbs-on-page\">{ session.get('categoryName') }</h3>\n            </div>\n            {deliveryStatus === 0 && deliveryMessage}\n            <div className=\"category-all\">\n              { productItem }\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n  products: store.products,\n  ordersQuota: store.api.get('ordersQuota'),\n}))(Products);"]}