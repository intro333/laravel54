{"version":3,"sources":["ProductItem.js"],"names":[],"mappings":"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","file":"ProductItem-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport '../../theme/css/bootstrap-datepicker3.min.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {\n  addProductToCart,\n  showProductsInCart\n} from '../../api';\nimport { changeSuccessModalDisplay, setScrollTop } from './actions';\nimport { isEmptyMap, isEmptyArray } from '../../helpers';\n\nclass ProductItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrollTop: 0,\n      orderNumberInp: 0,\n      errorBorderRed: false,\n      inputPlaceHolder: '',\n      addButtonText: 'Добавить в корзину',\n      addToCartButtonStyle: {\n        background: 'steelblue'\n      },\n    }\n  }\n\n  componentWillMount() {\n    const {dispatch} = this.props;\n    const data = {\n      emptyArray: true\n    };\n    showProductsInCart(dispatch, data);\n  }\n\n  componentWillUnmount() {\n    const { dispatch } = this.props;\n    dispatch(changeSuccessModalDisplay(false));\n    // window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', (event) => {\n      const { dispatch } = this.props;\n      var target = event.target || event.srcElement;\n      let scrollTop = target.body.scrollTop;\n      dispatch(setScrollTop(scrollTop));\n    });\n  }\n\n  getCountProductCart() {\n    const { productsForCart } = this.props;\n    const product = isEmptyArray(productsForCart) && productsForCart.filter((item) => item.name === this.props.itemName);\n    return parseInt(this.state.orderNumberInp) ? parseInt(this.state.orderNumberInp) : (isEmptyArray(product) ? product[0]['count'] : 1);\n  }\n\n  setPlusNumber() {\n\n    var inputVal = this.getCountProductCart();\n    if (inputVal < 99) {\n      this.setState({\n        orderNumberInp: (parseInt(inputVal) + 1)\n      });\n    } else if (isNaN(inputVal)) {\n      this.setState({\n        orderNumberInp: 1,\n        errorBorderRed: false\n      });\n    }\n  }\n\n  setMinusNumber() {\n    const { productsForCart } = this.props;\n    const product = isEmptyArray(productsForCart) && productsForCart.filter((item) => item.name === this.props.itemName);\n    var inputVal = this.getCountProductCart();\n    if (inputVal > 1) {\n      this.setState({\n        orderNumberInp: (parseInt(inputVal) - 1)\n      });\n    } else if (isNaN(inputVal)) {\n      this.setState({\n        orderNumberInp: 1,\n        errorBorderRed: false\n      });\n    }\n  }\n\n  setChangeNumber(e) {\n    var targetValue = e.target.value;\n    if(targetValue <= 99 && targetValue > 0 || targetValue === '') {\n      this.setState({\n        orderNumberInp: parseInt(targetValue),\n        errorBorderRed: false,\n        inputPlaceHolder: ''\n      });\n    }\n  }\n\n  addProductToCart() {\n    if (this.props.ordersQuota && this.props.ordersQuota.status) {\n      let productCounts = this.getCountProductCart();\n\n      if (productCounts) {\n        const { dispatch } = this.props;\n        const data = {\n          barCode: this.props.barCode,\n          productId: this.props.productId,\n          productCounts: productCounts,\n        };\n        addProductToCart(dispatch, data);\n        this.setState({\n          addButtonText: 'Товар в корзине',\n          addToCartButtonStyle: {\n            background: '#3c763d'\n          },\n        });\n        dispatch(changeSuccessModalDisplay(true));\n      } else {\n        this.setState({\n          errorBorderRed: true,\n          inputPlaceHolder: '?'\n        });\n      }\n    } {\n      this.setState({\n        addButtonText: 'Дата доставки закрыта'\n      });\n    }\n\n  }\n\n  render() {\n    const { productsForCart } = this.props;\n    const categoryItemImg = {\n      padding: '0 20px 0 20px'\n    };\n\n    const orderNumberInp = classNames({\n      'order-number-inp': true,\n      'error-border-red': this.state.errorBorderRed\n    });\n\n    const product = isEmptyMap(productsForCart) && productsForCart.filter((item) => item.name === this.props.itemName);\n    var inputVal = this.state.orderNumberInp ? this.state.orderNumberInp : (isEmptyArray(product) ? product[0]['count']: 1);\n    var inputPlaceHolder = this.state.inputPlaceHolder;\n    var addToCartButtonText = isEmptyArray(product) ? 'Товар в корзине' : this.state.addButtonText;\n    var addToCartButtonStyle = this.props.ordersQuota && this.props.ordersQuota.status ? (isEmptyArray(product) ? { background: '#3c763d' } : this.state.addToCartButtonStyle) : { background: '#aab5bf' };\n\n    return (\n      <div className=\"category-item animation-page-load-medium\">\n        <div className=\"category-item__img\" style={categoryItemImg}>\n          <img src={'/storage/images/products/' + this.props.imgSrc} width=\"190\" />\n          <div className=\"category-item__name\"> {this.props.itemName}</div>\n          <div className=\"category-item__price-measure\">\n            <span>{this.props.price} ₽ / {this.props.unit}</span>\n            <div className=\"order-table__cell\">\n              <div className=\"b-number\">\n                <div className=\"order-number\">\n                  <div className=\"order-number__field\">\n                    <input\n                      className={orderNumberInp}\n                      type=\"number\"\n                      max=\"99\"\n                      min=\"0\"\n                      value={inputVal}\n                      placeholder={inputPlaceHolder}\n                      onChange={this.setChangeNumber.bind(this)}\n                    />\n                  </div>\n                  <div\n                    className=\"order-number__spin minus order-spin-minus\"\n                    onClick={this.setMinusNumber.bind(this)}\n                  ></div>\n                  <div\n                    className=\"order-number__spin plus order-spin-plus\"\n                    onClick={this.setPlusNumber.bind(this)}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"add-to-cart-button\"\n            style={addToCartButtonStyle}\n            onClick={this.addProductToCart.bind(this)}\n          >\n            <p>{addToCartButtonText}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n  products: store.products,\n  productsForCart: store.api.get('productsForCart'),\n}))(ProductItem);"]}