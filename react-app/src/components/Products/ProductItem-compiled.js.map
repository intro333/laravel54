{"version":3,"sources":["ProductItem.js"],"names":[],"mappings":"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","file":"ProductItem-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport '../../theme/css/bootstrap-datepicker3.min.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {\n  addProductToCart,\n} from '../../api';\nimport * as modelActions from './actions';\n\nclass ProductItem extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      orderNumberInp: 1,\n      errorBorderRed: false,\n      inputPlaceHolder: '',\n      addButtonText: 'Добавить в корзину',\n      addToCartButtonStyle: {\n        background: 'steelblue'\n      }\n    }\n  }\n\n  setPlusNumber() {\n    var inputVal = this.state.orderNumberInp;\n    if (inputVal < 99) {\n      this.setState({\n        orderNumberInp: (parseInt(inputVal) + 1)\n      });\n    } else if (isNaN(inputVal)) {\n      this.setState({\n        orderNumberInp: 1,\n        errorBorderRed: false\n      });\n    }\n  }\n\n  setMinusNumber() {\n    var inputVal = parseInt(this.state.orderNumberInp);\n    if (inputVal > 1) {\n      this.setState({\n        orderNumberInp: (parseInt(inputVal) - 1)\n      });\n    } else if (isNaN(inputVal)) {\n      this.setState({\n        orderNumberInp: 1,\n        errorBorderRed: false\n      });\n    }\n  }\n\n  setChangeNumber(e) {\n    var targetValue = e.target.value;\n    if(targetValue <= 99 && targetValue > 0 || targetValue === '') {\n      this.setState({\n        orderNumberInp: parseInt(targetValue),\n        errorBorderRed: false,\n        inputPlaceHolder: ''\n      });\n    }\n  }\n\n  addProductToCart() {\n    let productCounts = this.state.orderNumberInp;\n\n    if (productCounts) {\n      const { dispatch } = this.props;\n      const data = {\n        barCode: this.props.barCode,\n        productId: this.props.productId,\n        productCounts: productCounts,\n      };\n      addProductToCart(dispatch, data);\n      this.setState({\n        addButtonText: 'Товар в корзине',\n        addToCartButtonStyle: {\n          background: '#3c763d'\n        }\n      })\n    } else {\n      this.setState({\n        errorBorderRed: true,\n        inputPlaceHolder: '?'\n      });\n    }\n  }\n\n  render() {\n    const { api, session } = this.props;\n    // const products = api.get('products');\n    // console.log('products get: ', products);\n    const categoryItemImg = {\n      padding: '0 20px 0 20px'\n    };\n\n    const orderNumberInp = classNames({\n      'order-number-inp': true,\n      'error-border-red': this.state.errorBorderRed\n    });\n\n    var inputVal = this.state.orderNumberInp;\n    var inputPlaceHolder = this.state.inputPlaceHolder;\n    var addToCartButtonStyle = this.state.addToCartButtonStyle;\n\n    return (\n      <div className=\"category-item\">\n        <div className=\"category-item__img\" style={categoryItemImg}>\n          <img src={this.props.imgSrc} width=\"190\" />\n          <div className=\"category-item__name\"> {this.props.itemName}</div>\n          <div className=\"category-item__price-measure\">\n            <span>{this.props.price} ₽ / {this.props.unit}</span>\n            <div className=\"order-table__cell\">\n              <div className=\"b-number\">\n                <div className=\"order-number\">\n                  <div className=\"order-number__field\">\n                    <input\n                      className={orderNumberInp}\n                      type=\"number\"\n                      max=\"99\"\n                      min=\"0\"\n                      value={inputVal}\n                      placeholder={inputPlaceHolder}\n                      onChange={this.setChangeNumber.bind(this)}\n                    />\n                  </div>\n                  <div\n                    className=\"order-number__spin minus order-spin-minus\"\n                    onClick={this.setMinusNumber.bind(this)}\n                  ></div>\n                  <div\n                    className=\"order-number__spin plus order-spin-plus\"\n                    onClick={this.setPlusNumber.bind(this)}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"add-to-cart-button\"\n            style={addToCartButtonStyle}\n            onClick={this.addProductToCart.bind(this)}\n          >\n            <p>{this.state.addButtonText}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n  products: store.products,\n}))(ProductItem);"]}