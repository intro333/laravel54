{"version":3,"sources":["PersonalAccount.js"],"names":[],"mappings":"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","file":"PersonalAccount-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport classNames from 'classnames';\n// Be sure to include styles at some point, probably during your bootstrapping\nimport 'react-select/dist/react-select.css';\nimport '../../theme/css/index.css';\nimport '../../theme/css/adaptive.css';\nimport '../../theme/css/main.css';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport MenuMobile from '../Popups/MenuMobile';\nimport Avatar from '../Popups/Avatar';\nimport InputMask from 'react-input-mask';\nimport * as helpers from '../../helpers';\n\nimport * as modelActions from '../../actions';\n\nimport {\n  setUserInfo,\n  updatePersonalData,\n  changePhotoPersonalData\n} from '../../api';\n\nclass PersonalAccount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: new Date(),\n      name: '',\n      sname: '',\n      mname: '',\n      email: '',\n      phone: '',\n      birthdate: false,\n      birthdateDay: false,\n      birthdateMonth: false,\n      birthdateYear: false,\n      gender: '',\n      avatar: true\n\n    }\n  }\n\n  componentWillMount() {\n    const { dispatch, session } = this.props;\n    setUserInfo(dispatch);\n    const userInfo = session.get('userInfo');\n\n    this.setState({\n      name: userInfo['name'],\n      sname: userInfo['sname'],\n      mname: userInfo['mname'],\n      email: userInfo['email'],\n      phone: userInfo['phone'],\n      gender: userInfo['gender'],\n    });\n\n    if (userInfo['birthdate']) {\n      this.setState({\n        birthdate: userInfo['birthdate'],\n        birthdateDay: new Date(userInfo['birthdate']).getUTCDate(),\n        birthdateMonth: (new Date(userInfo['birthdate']).getUTCMonth() + 1),\n        birthdateYear: new Date(userInfo['birthdate']).getUTCFullYear(),\n      });\n    }\n  }\n\n  handlerChangeDateDay(e) {\n    this.setState({\n      birthdateDay: e.value\n    });\n\n    if (e.value !== '' && this.state.birthdateMonth && this.state.birthdateYear) {\n      this.setState({\n        birthdate: this.state.birthdateYear + '-' + this.state.birthdateMonth + '-' + e.value\n      });\n    }\n  }\n\n  handlerChangeDateMonth(e) {\n    this.setState({\n      birthdateMonth: e.value\n    });\n\n    if (e.value !== '' && this.state.birthdateDay && this.state.birthdateYear) {\n      this.setState({\n        birthdate: this.state.birthdateYear + '-' + e.value + '-' + this.state.birthdateDay\n      });\n    }\n  }\n\n  handlerChangeDateYear(e) {\n    this.setState({\n      birthdateYear: e.value\n    });\n\n    if (e.value !== '' && this.state.birthdateMonth && this.state.birthdateDay) {\n      this.setState({\n        birthdate: e.value + '-' + this.state.birthdateMonth + '-' + this.state.birthdateDay\n      });\n    }\n  }\n\n  handlerChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handlerChangeSName(e) {\n    this.setState({\n      sname: e.target.value\n    });\n  }\n\n  handlerChangeMName(e) {\n    this.setState({\n      mname: e.target.value\n    });\n  }\n\n  handlerChangePhone(e) {\n    this.setState({\n      phone: e.target.value\n    });\n  }\n\n  handleChangeGender(e) {\n    this.setState({gender: e.value});\n  }\n\n  // handlerChangeBirthdate(e) {\n  //   var value = e.target.value;\n  //   var length = e.target.value.trim().length;\n  //   var date = this.state.date;\n  //\n  //   var result = helpers.inputmaskBirthDate(value, length, date);\n  //\n  //   this.setState({\n  //     birthdate: result\n  //   });\n  // }\n\n  handlerUpdatePersonalData() {\n    const { dispatch } = this.props;\n\n    const data = {\n      name: this.state.name,\n      sname: this.state.sname,\n      mname: this.state.mname,\n      email: this.state.email,\n      phone: this.state.phone,\n      gender: this.state.gender,\n      birthdate: this.state.birthdate,\n    };\n\n    updatePersonalData(dispatch, data);\n  }\n\n  handlerChangePhoto() {\n    this.setState({\n      avatar: false\n    });\n  }\n\n  render() {\n\n    const { dispatch, session, api } = this.props;\n    const userInfo = session.get('userInfo');\n    const userImage = api.get('imagePath') ? api.get('imagePath') : \"/images/no-image.png\";\n    const genderOptions = [\n      { value: 0, label: 'Не выбран' },\n      { value: 1, label: 'Мужской' },\n      { value: 2, label: 'Женский' }\n    ];\n    const monthOptions = [\n      { value: 0, label: '' },\n      { value: 1, label: 'Январь' }, { value: 2, label: 'Февраль' }, { value: 3, label: 'Март' }, { value: 4, label: 'Апрель' }, { value: 5, label: 'Май' }, { value: 6, label: 'Июнь' }, { value: 7, label: 'Июль' }, { value: 8, label: 'Август' }, { value: 9, label: 'Сентябрь' }, { value: 10, label: 'Октябрь' }, { value: 11, label: 'Ноябрь' }, { value: 12, label: 'Декабрь' }\n    ];\n    const dayOptions = helpers.getNumberSelectOptions(1, 32);\n    const yearOptions = helpers.getNumberSelectOptions(1900, (new Date().getUTCFullYear() - 10));\n\n    return (\n      <div className=\"container\">\n        <Navigation />\n        <MenuMobile />\n        <Avatar\n          avatar={this.state.avatar}\n        />\n        <div className=\"main-container\">\n          <h1>Редактирование личных данных</h1>\n          <p className=\"personal-explain-text\">Здесь вы можете отредактировать личные данные и добавить своё фото.</p>\n\n          <div className=\"personal-container\">\n            <div className=\"image-container\">\n              <div className=\"customer-image\">\n                <img src={userImage} />\n              </div>\n                <input value=\"Добавить фото\" id=\"personal-photo\" className=\"register-button\" onClick={this.handlerChangePhoto.bind(this)} />\n            </div>\n            <div className=\"customer-data-container\">\n              <form action=\"/personal\" method=\"POST\" id=\"personal-data-form\">\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"fname\">Имя</label>\n                  <input id=\"fname\" name=\"fname\" type=\"text\" value={this.state.name} onChange={this.handlerChangeName.bind(this)} />\n                </div>\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"sname\">Фамилия</label>\n                  <input id=\"sname\" name=\"sname\" type=\"text\" value={this.state.sname} onChange={this.handlerChangeSName.bind(this)} />\n                </div>\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"mname\">Отчество</label>\n                  <input id=\"mname\" name=\"mname\" type=\"text\" value={this.state.mname ? this.state.mname : ''} onChange={this.handlerChangeMName.bind(this)}  />\n                </div>\n                <input type=\"hidden\" name=\"birthdate\" value={this.state.birthdate} />\n                <label className=\"personal-filds-label\" htmlFor=\"birthdate\">Дата рождения</label>\n                <div className=\"personal-filds-label-input\">\n                  <div className=\"personal-select-birdthdate-group\">\n                    <Select\n                      name=\"birthdate\"\n                      className=\"margin-right-10\"\n                      value={this.state.birthdateDay ? this.state.birthdateDay : ''}\n                      options={dayOptions}\n                      onChange={this.handlerChangeDateDay.bind(this)}\n                      placeholder=\"\"\n                      clearable={false}\n                      searchable={false}\n                      scrollMenuIntoView={false}\n                    />\n                    <Select\n                      className=\"margin-right-10\"\n                      name=\"birthdate\"\n                      value={this.state.birthdateMonth ? this.state.birthdateMonth : ''}\n                      options={monthOptions}\n                      onChange={this.handlerChangeDateMonth.bind(this)}\n                      placeholder=\"\"\n                      clearable={false}\n                      searchable={false}\n                      scrollMenuIntoView={false}\n                    />\n                    <Select\n                      name=\"birthdate\"\n                      value={this.state.birthdateYear ? this.state.birthdateYear : ''}\n                      options={yearOptions}\n                      onChange={this.handlerChangeDateYear.bind(this)}\n                      placeholder=\"\"\n                      clearable={false}\n                      searchable={false}\n                      scrollMenuIntoView={false}\n                    />\n                    {/*<InputMask*/}\n                    {/*id=\"birthdate\"*/}\n                    {/*value={this.state.birthdate ? this.state.birthdate : ''}*/}\n                    {/*mask=\"99 99 9999\" maskChar=\" \"*/}\n                    {/*onChange={this.handlerChangeBirthdate.bind(this)}*/}\n                    {/*name=\"birthdate\"*/}\n                    {/*placeholder=\"09-12-1986\" />*/}\n                    {/*<span className=\"input-group-addon\" id=\"basic-addon1\"><i className=\"glyphicon glyphicon-calendar\"></i></span>*/}\n                  </div>\n                </div>\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"gender\">Пол</label>\n                  <Select\n                    name=\"gender\"\n                    value={this.state.gender}\n                    options={genderOptions}\n                    onChange={this.handleChangeGender.bind(this)}\n                    placeholder=\"Не выбран\"\n                    clearable={false}\n                    searchable={false}\n                  />\n                </div>\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"email\">Email</label>\n                  <input id=\"email\" name=\"email\" type=\"email\" value={this.state.email} disabled  />\n                </div>\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"phone\">Телефон</label>\n                  <InputMask /*{...this.props}*/\n                    id=\"phone\"\n                    value={this.state.phone ? this.state.phone : ''}\n                    mask=\"+7\\(999\\) 999 99 99\" maskChar=\" \"\n                    onChange={this.handlerChangePhone.bind(this)}\n                    name=\"phone\"\n                    placeholder=\"+7(___) ___ __ __\" />\n                </div>\n                <p style={{color: 'red', display: 'none'}} className=\"error_message_for_create\">Заполните все поля помеченные звёздочкой.</p>\n                <input id=\"personal-submit\" className=\"register-button\" value=\"Сохранить данные\" onClick={this.handlerUpdatePersonalData.bind(this)} />\n              </form>\n            </div>\n            <div className=\"customer-data-container\">\n              <form action=\"/change-password\" method=\"POST\" id=\"change-password-form\">\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"password-old\">Старый пароль</label>\n                  <input id=\"password-old\" name=\"password-old\" type=\"password\" placeholder=\"Введите пароль\" />\n                </div>\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"password\">Новый пароль</label>\n                  <input id=\"password\" name=\"password\" type=\"password\" placeholder=\"Введите пароль\" />\n                </div>\n                <div className=\"personal-filds-label-input\">\n                  <label className=\"personal-filds-label\" htmlFor=\"password-again\">Повтор</label>\n                  <input id=\"password-again\" name=\"password-again\" type=\"password\" placeholder=\"Повторите пароль\" />\n                </div>\n                <input id=\"change-password-submit\" className=\"register-button\" value=\"Изменить пароль\" />\n                  <div style={{color: 'red', display: 'none', marginTop: '5px'}} className=\"error_message\">Заполните все 3 поля с паролями.</div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n}))(PersonalAccount);"]}