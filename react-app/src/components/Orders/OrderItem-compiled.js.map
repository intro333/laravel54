{"version":3,"sources":["OrderItem.js"],"names":[],"mappings":"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","file":"OrderItem-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport '../../theme/css/bootstrap-datepicker3.min.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {\n  addProductToCart,\n  deleteProductFromCart,\n  getProductCounts,\n} from '../../api';\n// import * as modelActions from './actions';\n\nclass OrderItem extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderNum: false,\n      tdBotyVisible: false\n    };\n  }\n\n  handleClickOrder() {\n    var orderNum = this.state.orderNum;\n    var isVisible = this.state.tdBotyVisible;\n\n    this.setState({\n      orderNum: !orderNum,\n      tdBotyVisible: !isVisible\n    })\n  }\n\n  render() {\n    var items = this.props.item;\n    var total = null;\n\n    const orderNumberInp = classNames({\n      'order-number-inp': true,\n    });\n    const totalStyle = {\n      margin: '10px'\n    }\n\n    var productsTr = items.map((item, index) =>\n      <tr key={index}>\n        <td className=\"table-40-procent-td\">\n          <img className=\"cart-product-image\" src={item.image_path} />\n          <span>{item.name}</span>\n        </td>\n        <td>{item.price} ₽ / {item.unit}</td>\n        <td style={{textAlign: 'start'}}>\n          <div className=\"order-table__cell\">\n            <div className=\"b-number\">\n              <div className=\"order-number\" style={{width: '70px'}}>\n                <div className=\"order-number__field\">\n                  <input\n                    className={orderNumberInp}\n                    type=\"number\"\n                    max=\"99\"\n                    min=\"0\"\n                    value={item.counts}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td>{item.cost} ₽</td>\n        <td style={{color: 'firebrick'}}>\n          <span\n            className=\"remove-product\"\n            aria-hidden=\"true\"\n          >\n          </span>\n        </td>\n      </tr>\n    );\n\n    var headTd = null;\n    const thStyle = {\n      textAlign: 'left',\n      width: '100%',\n    }\n\n    if (!this.state.orderNum) {\n      headTd = <tr className=\"order-tr-head\" onClick={this.handleClickOrder.bind(this)}>\n        <th style={thStyle}>Номер заказа 172034</th>\n        <th className=\"table-25-procent\"></th>\n        <th className=\"table-25-procent\"></th>\n        <th className=\"table-10-procent\"></th>\n        <th className=\"table-10-procent\"></th>\n      </tr>\n    } else {\n      headTd = <tr className=\"order-tr-head\" onClick={this.handleClickOrder.bind(this)}>\n        <th className=\"table-30-procent\">Продукт</th>\n        <th className=\"table-25-procent\">Цена</th>\n        <th className=\"table-25-procent\">Количество</th>\n        <th className=\"table-10-procent\">Стоимость</th>\n        <th className=\"table-10-procent\"></th>\n      </tr>\n    }\n\n    total = items.reduce((total, item) => {\n        return total + item.cost;\n      }, 0\n    );\n\n    return (\n      <div className=\"orders-item\">\n        <table id=\"cart-products-table\" className=\"margin-off\">\n          { headTd }\n          { this.state.tdBotyVisible && productsTr }\n        </table>\n        {\n          this.state.tdBotyVisible &&\n          <div className=\"cart-order__total\" style={totalStyle}>Итог:&nbsp;<span>{ total } ₽</span></div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n  products: store.products,\n}))(OrderItem);"]}