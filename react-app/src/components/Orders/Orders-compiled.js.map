{"version":3,"sources":["Orders.js"],"names":[],"mappings":"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","file":"Orders-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../../theme/css/index.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport MenuMobile from '../Popups/MenuMobile';\nimport OrderItem from '../Orders/OrderItem';\nimport {\n  showProductsInCart,\n  sendOrder,\n} from '../../api';\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderNum: false,\n      tdBotyVisible: 'none'\n    };\n  }\n\n  componentWillMount() {\n\n  }\n\n  handleClickOrder() {\n    var orderNum = this.state.orderNum;\n    var isVisible = this.state.tdBotyVisible === 'none' ? 'block' : 'none';\n\n    this.setState({\n      orderNum: !orderNum,\n      tdBotyVisible: isVisible\n    })\n    console.log('isVisible',isVisible)\n  }\n\n  render() {\n\n    const { api } = this.props;\n    const productsForCart = api.get('productsForCart');\n    var total = null;\n\n    const productsTd = productsForCart.map((item) =>\n      <OrderItem\n        key={item.productId}\n        item={item}\n        visible={this.state.tdBotyVisible}\n      />\n    );\n\n    var headTd = null;\n\n    if (!this.state.orderNum) {\n      headTd = <tr className=\"order-tr-head\" onClick={this.handleClickOrder.bind(this)}>\n        <th className=\"table-30-procent\">Номер заказа 172034</th>\n        <th className=\"table-25-procent\"></th>\n        <th className=\"table-25-procent\"></th>\n        <th className=\"table-10-procent\"></th>\n        <th className=\"table-10-procent\"></th>\n      </tr>\n    } else {\n      headTd = <tr className=\"order-tr-head\" onClick={this.handleClickOrder.bind(this)}>\n        <th className=\"table-30-procent\">Продукт</th>\n        <th className=\"table-25-procent\">Цена</th>\n        <th className=\"table-25-procent\">Количество</th>\n        <th className=\"table-10-procent\">Стоимость</th>\n        <th className=\"table-10-procent\"></th>\n      </tr>\n    }\n\n    total = productsForCart.reduce((total, item) => {\n        return total + ((item.count === '' ? 1 : parseInt(item.count, 10)) * parseInt(item.price, 10));\n      }, 0\n    );\n\n    const totalStyle = {\n      margin: '10px'\n    }\n\n    return (\n      <div className=\"container\">\n        <Navigation />\n        <MenuMobile />\n        <div className=\"main-container\">\n          <div className=\"category-head\">\n            <h3 className=\"bread-crumbs-on-page\">Мои заказы</h3>\n          </div>\n          <div className=\"orders-all\">\n            <div className=\"orders-item\">\n              <table id=\"cart-products-table\" className=\"margin-off\">\n                { headTd }\n                { productsTd }\n              </table>\n              <div className=\"cart-order__total\" style={totalStyle}>Итог:&nbsp;<span>{ total } ₽</span></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n}))(Orders);"]}