{"version":3,"sources":["Orders.js"],"names":[],"mappings":"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","file":"Orders-compiled.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Select from 'react-select';\nimport * as helpers from '../../helpers';\nimport '../../theme/css/index.css';\nimport '../../theme/css/main.css';\nimport '../../theme/css/adaptive.css';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport MenuMobile from '../Popups/MenuMobile';\nimport OrderItem from '../Orders/OrderItem';\nimport {\n  ordersGetAll,\n} from '../../api';\nimport * as modelActions from '../../actions';\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderStatus: 1,\n      orderYear: new Date().getUTCFullYear()\n    }\n  }\n\n  ordersGetAll(status, year) {\n    const { dispatch } = this.props;\n    const data = {\n      status: status,\n      year: year,\n    };\n    ordersGetAll(dispatch, data);\n  }\n\n  componentWillMount() {\n    this.ordersGetAll(this.state.orderStatus, this.state.orderYear);\n  }\n\n  componentWillReceiveProps(props) {\n    const { dispatch, api } = props || this.props;\n    if(props.api.get('componentWillReceivePropsChange')) {\n      this.ordersGetAll(this.state.orderStatus, this.state.orderYear);\n      dispatch(modelActions.componentWillReceivePropsChange(false));\n    }\n  }\n\n  handleChangeOrderStatus(e) {\n    this.setState({orderStatus: e.value});\n    this.ordersGetAll(e.value, this.state.orderYear);\n  }\n\n  handlerChangeOrderYear(e) {\n    this.setState({\n      orderYear: e.value,\n    });\n    this.ordersGetAll(this.state.orderStatus, e.value);\n  }\n\n  render() {\n\n    const { api, history } = this.props;\n    const orders = api.get('orders');\n    var tables = null;\n\n    if(helpers.isEmptyMap(orders)) {\n      tables = Object.entries(orders).map((item, index) =>\n      // console.log('item', item[1][0]['orderData'])\n          <OrderItem\n            orderId={item[1][0]['orderId']}\n            emailHash={item[1][0]['emailHash']}\n            orderDate={item[1][0]['orderDate']}\n            timeQuota={item[1][0]['timeQuota']}\n            key={item[1][0]['orderId']}\n            item={item[1]}\n            history={history}\n            orderStatus={this.state.orderStatus}\n          />\n      );\n    }\n\n    const OrderStatusOptions = [\n      { value: 1, label: 'Обрабатывается' },\n      { value: 2, label: 'Выполнен' },\n      { value: 3, label: 'Удален/Отменен' },\n      // { value: 3, label: 'Отправлен' }\n    ];\n\n    const yearOptions = helpers.getNumberSelectOptions(2012, (new Date().getUTCFullYear()), false);\n\n    return (\n      <div className=\"container\">\n        <Navigation />\n        <MenuMobile />\n        <div className=\"main-container\">\n          <div className=\"category-head\">\n            <h3 className=\"bread-crumbs-on-page\">Мои заказы</h3>\n          </div>\n          <div className=\"order-filter-main\">\n            <div className=\"order-filds-label-input\">\n              <label className=\"order-filds-label\" htmlFor=\"status\">Статус заказа</label>\n              <Select\n                name=\"status\"\n                value={this.state.orderStatus}\n                options={OrderStatusOptions}\n                onChange={this.handleChangeOrderStatus.bind(this)}\n                clearable={false}\n                searchable={false}\n              />\n            </div>\n            <div className=\"order-filds-label-input\">\n              <label className=\"order-filds-label\" htmlFor=\"status\">Год</label>\n              <Select\n                name=\"birthdate\"\n                value={this.state.orderYear}\n                options={yearOptions}\n                onChange={this.handlerChangeOrderYear.bind(this)}\n                clearable={false}\n                searchable={false}\n                scrollMenuIntoView={false}\n              />\n            </div>\n          </div>\n          <div className=\"orders-all\">\n              {tables}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  dispatch: store.dispatch,\n  session: store.session,\n  api: store.api,\n}))(Orders);"]}