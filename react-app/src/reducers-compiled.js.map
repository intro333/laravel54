{"version":3,"sources":["reducers.js"],"names":[],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;AAEA;AACA,IAAM,oBAAN,C,CAPA;;AAQA,IAAM,kCAAN;AACA,IAAM,sBAAN;;AAEO,IAAM,oBAAM,SAAN,GAAM,GAMJ;AAAA,MANK,KAML,uEANa,IAAI;AAC9B,eAAW,IADmB;AAE9B,gBAAY,KAFkB;AAG9B,cAAU,KAHoB;AAI9B,qBAAiB;;AAJa,GAAJ,CAMb;AAAA,MAAX,MAAW;;AACb,UAAQ,OAAO,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,MAAM,GAAN,CAAU,WAAV,EAAuB,OAAO,SAA9B,CAAP;;AAEF,SAAK,gBAAL;AACE,aAAO,MAAM,GAAN,CAAU,YAAV,EAAwB,OAAO,UAA/B,CAAP;;AAEF,SAAK,cAAL;AACE,aAAO,MAAM,GAAN,CAAU,UAAV,EAAsB,OAAO,QAA7B,CAAP;;AAEF,SAAK,uBAAL;AACE,aAAO,MAAM,GAAN,CAAU,iBAAV,EAA6B,OAAO,eAApC,CAAP;;AAEF;AACE,aAAO,KAAP;AAdJ;AAgBD,CAvBM;;AAyBP,IAAI,sBAAsB,IAAI;AAC5B,iBAAe,IADa;AAE5B,cAAY,IAFgB;AAG5B,gBAAc;AAHc,CAAJ,CAA1B;;AAMA,IAAM,UAAU,SAAV,OAAU,GAAyC;AAAA,MAAxC,KAAwC,uEAAhC,mBAAgC;AAAA,MAAX,MAAW;;AACvD,UAAQ,OAAO,IAAf;AACE,SAAK,qBAAL;AACE,aAAO,MAAM,GAAN,CAAU,eAAV,EAA2B,OAAO,aAAlC,CAAP;;AAEF,SAAK,iBAAL;AACE,aAAO,MAAM,GAAN,CAAU,YAAV,EAAwB,OAAO,UAA/B,CAAP;;AAEF,SAAK,mBAAL;AACE,aAAO,MAAM,GAAN,CAAU,cAAV,EAA0B,OAAO,YAAjC,CAAP;;AAEF;AACE,aAAO,KAAP;AAXJ;AAaD,CAdD;;kBAgBe,4BAAgB;AAC7B,UAD6B;AAE7B,kBAF6B;AAG7B;AAH6B,CAAhB,C","file":"reducers-compiled.js","sourcesContent":["/* global NODE_ENV */\n\nimport { combineReducers } from 'redux';\nimport { List, Map, OrderedMap } from 'immutable';\nimport products from './components/Products/redusers';\n\n// Just ease ESLint rule\nconst map = Map;\nconst orderedMap = OrderedMap;\nconst list = List;\n\nexport const api = (state = map({\n  userToken: null,\n  categories: map(),\n  products: map(),\n  productsForCart: map(),\n\n}), action) => {\n  switch (action.type) {\n    case 'SET_USER_TOKEN':\n      return state.set('userToken', action.userToken);\n\n    case 'SET_CATEGORIES':\n      return state.set('categories', action.categories);\n\n    case 'SET_PRODUCTS':\n      return state.set('products', action.products);\n\n    case 'SET_PRODUCTS_FOR_CART':\n      return state.set('productsForCart', action.productsForCart);\n\n    default:\n      return state;\n  }\n};\n\nlet defaultSessionState = map({\n  mobNavElement: true,\n  categoryId: null,\n  categoryName: null,\n});\n\nconst session = (state = defaultSessionState, action) => {\n  switch (action.type) {\n    case 'SET_MOB_NAV_ELEMENT':\n      return state.set('mobNavElement', action.mobNavElement);\n\n    case 'SET_CATEGORY_ID':\n      return state.set('categoryId', action.categoryId);\n\n    case 'SET_CATEGORY_NAME':\n      return state.set('categoryName', action.categoryName);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  api,\n  session,\n  products,\n});\n"]}